0001   0000             ;==================================================================================
0002   0000             ; Contents of this file are copyright Grant Searle
0003   0000             ;
0004   0000             ; You have permission to use this for NON COMMERCIAL USE ONLY
0005   0000             ; If you wish to use it elsewhere, please include an acknowledgement to myself.
0006   0000             ;
0007   0000             ; http://searle.hostei.com/grant/index.html
0008   0000             ;
0009   0000             ; eMail: home.micros01@btinternet.com
0010   0000             ;
0011   0000             ; If the above don't work, please perform an Internet search to see if I have
0012   0000             ; updated the web page hosting service.
0013   0000             ;
0014   0000             ;==================================================================================
0015   0000             
0016   0000             loadAddr	.EQU	0D000h
0017   0000             numSecs		.EQU	24	; Number of 512 sectors to be loaded
0018   0000             
0019   0000             SD_DATA		.EQU	088H
0020   0000             SD_CONTROL	.EQU	089H
0021   0000             SD_STATUS	.EQU	089H
0022   0000             SD_LBA0		.EQU	08AH
0023   0000             SD_LBA1		.EQU	08BH
0024   0000             SD_LBA2		.EQU	08CH
0025   0000             
0026   0000             LF		.EQU	0AH		;line feed
0027   0000             FF		.EQU	0CH		;form feed
0028   0000             CR		.EQU	0DH		;carriage RETurn
0029   0000             
0030   0000             ;================================================================================================
0031   0000             
0032   5000             		.ORG	5000H		; Loader origin.
0033   5000             
0034   5000 CD BA 50    		CALL	printInline
0035   5003 43 50 2F 4D 		.TEXT "CP/M System Transfer by G. Searle 2012-13"
0035   5007 20 53 79 73 
0035   500B 74 65 6D 20 
0035   500F 54 72 61 6E 
0035   5013 73 66 65 72 
0035   5017 20 62 79 20 
0035   501B 47 2E 20 53 
0035   501F 65 61 72 6C 
0035   5023 65 20 32 30 
0035   5027 31 32 2D 31 
0035   502B 33 
0036   502C 0D 0A 00    		.DB CR,LF,0
0037   502F             
0038   502F 06 18       		LD	B,numSecs
0039   5031             
0040   5031 3E 00       		LD	A,0
0041   5033 32 CB 50    		LD	(lba0),A
0042   5036 32 CC 50    		ld 	(lba1),A
0043   5039 32 CD 50    		ld 	(lba2),A
0044   503C 32 CE 50    		ld 	(lba3),A
0045   503F 21 00 D0    		LD	HL,loadAddr
0046   5042 22 CF 50    		LD	(dmaAddr),HL
0047   5045             processSectors:
0048   5045             
0049   5045 CD 8C 50    		call	writehst
0050   5048             
0051   5048 11 00 02    		LD	DE,0200H
0052   504B 2A CF 50    		LD	HL,(dmaAddr)
0053   504E 19          		ADD	HL,DE
0054   504F 22 CF 50    		LD	(dmaAddr),HL
0055   5052 3A CB 50    		LD	A,(lba0)
0056   5055 3C          		INC	A
0057   5056 32 CB 50    		LD	(lba0),A
0058   5059             
0059   5059 10 EA       		djnz	processSectors
0060   505B             
0061   505B CD BA 50    		CALL	printInline
0062   505E 0D 0A       		.DB CR,LF
0063   5060 53 79 73 74 		.TEXT "System transfer complete"
0063   5064 65 6D 20 74 
0063   5068 72 61 6E 73 
0063   506C 66 65 72 20 
0063   5070 63 6F 6D 70 
0063   5074 6C 65 74 65 
0064   5078 0D 0A 00    		.DB CR,LF,0
0065   507B             
0066   507B C9          		RET				
0067   507C             
0068   507C             ; =========================================================================
0069   507C             ; Disk routines as used in CBIOS
0070   507C             ; =========================================================================
0071   507C             setLBAaddr:
0072   507C 3A CD 50    		LD	A,(lba2)
0073   507F D3 8C       		OUT	(SD_LBA2),A
0074   5081 3A CC 50    		LD	A,(lba1)
0075   5084 D3 8B       		OUT	(SD_LBA1),A
0076   5086 3A CB 50    		LD	A,(lba0)
0077   5089 D3 8A       		OUT	(SD_LBA0),A
0078   508B C9          		ret
0079   508C             
0080   508C             ;================================================================================================
0081   508C             ; Write physical sector to host
0082   508C             ;================================================================================================
0083   508C             
0084   508C             writehst:
0085   508C F5          		PUSH 	AF
0086   508D C5          		PUSH 	BC
0087   508E E5          		PUSH 	HL
0088   508F             
0089   508F DB 89       wrWait1: IN	A,(SD_STATUS)
0090   5091 FE 80       		CP	128
0091   5093 20 FA       		JR	NZ,wrWait1
0092   5095             
0093   5095 CD 7C 50    		CALL 	setLBAaddr
0094   5098             		
0095   5098 3E 01       		LD	A,$01	; 01 = Write block
0096   509A D3 89       		OUT	(SD_CONTROL),A
0097   509C             	
0098   509C 0E 04       		LD 	c,4
0099   509E             		;LD 	HL,hstbuf
0100   509E             wr4secs:
0101   509E 06 80       		LD 	b,128
0102   50A0             wrByte:
0103   50A0             	
0104   50A0 DB 89       wrWait2: IN	A,(SD_STATUS)
0105   50A2 FE A0       		CP	160 ; Write buffer empty
0106   50A4 20 FA       		JR	NZ,wrWait2
0107   50A6             
0108   50A6             		; UPDATE S0urceror, inserted wait cycle between IN and OUT
0109   50A6             		; to resolve unknown write issue in sd_controller.vhd in combination 
0110   50A6             		; with MISTer virtual SD interface sys/sd_card.sv
0111   50A6             		; which results in hangs or write errors.
0112   50A6 C5          		push bc
0113   50A7 06 32       		ld b,50
0114   50A9             _again:
0115   50A9 10 FE       		djnz _again	
0116   50AB C1          		pop bc
0117   50AC             		; END UPDATE
0118   50AC             
0119   50AC 7E          		LD 	A,(HL)
0120   50AD D3 88       		OUT	(SD_DATA),A
0121   50AF 23          		INC 	HL
0122   50B0 05          		dec 	b
0123   50B1 20 ED       		JR 	NZ, wrByte
0124   50B3             
0125   50B3 0D          		dec 	c
0126   50B4 20 E8       		JR 	NZ,wr4secs
0127   50B6             
0128   50B6 E1          		POP 	HL
0129   50B7 C1          		POP 	BC
0130   50B8 F1          		POP 	AF
0131   50B9             		
0132   50B9             		;XOR 	a
0133   50B9             		;ld	(erflag),a
0134   50B9 C9          		RET
0135   50BA             
0136   50BA             
0137   50BA             ;================================================================================================
0138   50BA             ; Utilities
0139   50BA             ;================================================================================================
0140   50BA             
0141   50BA             printInline:
0142   50BA E3          		EX 	(SP),HL 	; PUSH HL and put RET ADDress into HL
0143   50BB F5          		PUSH 	AF
0144   50BC C5          		PUSH 	BC
0145   50BD 7E          nextILChar:	LD 	A,(HL)
0146   50BE FE 00       		CP	0
0147   50C0 28 04       		JR	Z,endOfPrint
0148   50C2 CF          		RST 	08H
0149   50C3 23          		INC 	HL
0150   50C4 18 F7       		JR	nextILChar
0151   50C6 23          endOfPrint:	INC 	HL 		; Get past "null" terminator
0152   50C7 C1          		POP 	BC
0153   50C8 F1          		POP 	AF
0154   50C9 E3          		EX 	(SP),HL 	; PUSH new RET ADDress on stack and restore HL
0155   50CA C9          		RET
0156   50CB             
0157   50CB 00          lba0		.DB	00h
0158   50CC 00          lba1		.DB	00h
0159   50CD 00          lba2		.DB	00h
0160   50CE 00          lba3		.DB	00h
0161   50CF 00 00       dmaAddr		.dw	0
0162   50D1             
0163   50D1             	.END
tasm: Number of errors = 0
